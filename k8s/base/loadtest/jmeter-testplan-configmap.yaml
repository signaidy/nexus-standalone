apiVersion: v1
kind: ConfigMap
metadata:
  name: jmeter-testplan
data:
  test.jmx: |
    <?xml version="1.0" encoding="UTF-8"?>
    <jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
      <hashTree>
        <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Nexus Smoke" enabled="true">
          <stringProp name="TestPlan.comments">Simple GETs against backend</stringProp>
          <boolProp name="TestPlan.functional_mode">false</boolProp>
          <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
          <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="targetBaseUrl" elementType="Argument">
                <stringProp name="Argument.name">targetBaseUrl</stringProp>
                <stringProp name="Argument.value">${__P(targetBaseUrl,http://backend:8080/nexus)}</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </TestPlan>
        <hashTree>
          <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG" enabled="true">
            <stringProp name="ThreadGroup.num_threads">${__P(threads,25)}</stringProp>
            <stringProp name="ThreadGroup.ramp_time">${__P(rampup,10)}</stringProp>
            <boolProp name="ThreadGroup.scheduler">true</boolProp>
            <stringProp name="ThreadGroup.duration">${__P(duration,300)}</stringProp>
          </ThreadGroup>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /healthz" enabled="true">
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.path">/healthz</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.use_keepalive">true</stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.postBodyRaw">false</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /aboutus/1" enabled="true">
              <stringProp name="HTTPSampler.path">/aboutus/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <stringProp name="HTTPSampler.use_keepalive">true</stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Prometheus Listener" enabled="true">
              <stringProp name="classname">com.github.kolesnikovm.PrometheusListener</stringProp>
              <elementProp name="arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="testName" elementType="Argument">
                    <stringProp name="Argument.name">testName</stringProp>
                    <stringProp name="Argument.value">nexus-smoke</stringProp>
                  </elementProp>
                  <elementProp name="runId" elementType="Argument">
                    <stringProp name="Argument.name">runId</stringProp>
                    <stringProp name="Argument.value">${__time(YMMdd-HHmmss)}</stringProp>
                  </elementProp>
                  <elementProp name="exporterPort" elementType="Argument">
                    <stringProp name="Argument.name">exporterPort</stringProp>
                    <stringProp name="Argument.value">9270</stringProp>
                  </elementProp>
                  <elementProp name="samplersRegExp" elementType="Argument">
                    <stringProp name="Argument.name">samplersRegExp</stringProp>
                    <stringProp name="Argument.value">.*</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </BackendListener>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </jmeterTestPlan>