---
kind: pipeline
type: kubernetes
name: dev
timeout: 120
trigger: { branch: [dev], event: [push] }
service_account_name: drone-pipeline

steps:
  - name: build-backend
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint:
      - /kaniko/executor
    command:
      - --verbosity=info
      - --context=dir://$DRONE_WORKSPACE/backend
      - --dockerfile=$DRONE_WORKSPACE/backend/Dockerfile
      - --destination=us-central1-docker.pkg.dev/spectra-kube/nexus/nexus-backend:${DRONE_COMMIT_SHA}
      - --cache=true
      - --cache-ttl=168h
      - --snapshot-mode=time
      - --use-new-run
    # no volumes

  - name: frontend-build
    image: node:20-bullseye
    environment:
      npm_config_fund: "false"
      npm_config_audit: "false"
      npm_config_progress: "false"
      npm_config_fetch_retries: "8"
      npm_config_fetch_retry_mintimeout: "30000"
      npm_config_fetch_retry_maxtimeout: "180000"
      npm_config_network_timeout: "600000"
    commands:
      - cd frontend
      - npm ci
      - npm run build
      - npm prune --omit=dev --omit=optional
      - npm dedupe --omit=dev || true
      - tar --sort=name --mtime='@0' --owner=0 --group=0 --numeric-owner -I 'gzip -9n' -cf build.tgz build
      - tar --sort=name --mtime='@0' --owner=0 --group=0 --numeric-owner -I 'gzip -9n' -cf node_modules.tgz node_modules
      - ls -lh build.tgz node_modules.tgz || true
      - du -sh build node_modules || true

  - name: build-frontend
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint:
      - /kaniko/executor
    command:
      - --verbosity=debug
      - --image-download-retry=5
      - --image-fs-extract-retry=5
      - --push-retry=5
      - --snapshot-mode=time
      - --single-snapshot
      - --compressed-caching=false
      - --no-push-cache
      - --context=dir://$DRONE_WORKSPACE/frontend
      - --dockerfile=$DRONE_WORKSPACE/frontend/Dockerfile
      - --destination=us-central1-docker.pkg.dev/spectra-kube/nexus/nexus-frontend:${DRONE_COMMIT_SHA}
      - --cache=true
      - --cache-ttl=168h
      - --use-new-run
    resources:
      requests: { cpu: 1, memory: 1Gi }
      limits:   { cpu: 2, memory: 4Gi }

  - name: deploy
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests: { cpu: 100m, memory: 128Mi }
      limits:   { cpu: 500m, memory: 256Mi }
    environment:
      PROJECT_ID: spectra-kube
      REGION: us-central1
      REPO: nexus
    commands:
      - mkdir -p kustom-override/dev
      - |
        cat > kustom-override/dev/kustomization.yaml <<EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - ../../k8s/overlays/dev
        images:
          - name: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-backend
            newName: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-backend
            newTag: ${DRONE_COMMIT_SHA}
          - name: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-frontend
            newName: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-frontend
            newTag: ${DRONE_COMMIT_SHA}
        EOF
      - kubectl apply -k kustom-override/dev
      - kubectl -n dev rollout status deploy/backend --timeout=300s
      - kubectl -n dev rollout status deploy/frontend --timeout=300s

---
kind: pipeline
type: kubernetes
name: uat
trigger: { branch: [uat], event: [push] }
service_account_name: drone-pipeline

steps:
  - name: build-backend
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    
    args:
      - --verbosity=info
      - --context=dir://$DRONE_WORKSPACE/backend
      - --dockerfile=$DRONE_WORKSPACE/backend/Dockerfile
      - --destination=us-central1-docker.pkg.dev/spectra-kube/nexus/nexus-backend:${DRONE_COMMIT_SHA}
      - --cache=true
      - --cache-ttl=168h
      - --snapshotMode=time
      - --use-new-run
    volumes:
      - name: docker-config
        path: /kaniko/.docker

  - name: frontend-build
    image: node:20-bullseye
    environment:
      npm_config_fund: "false"
      npm_config_audit: "false"
      npm_config_progress: "false"
      npm_config_fetch_retries: "8"
      npm_config_fetch_retry_mintimeout: "30000"
      npm_config_fetch_retry_maxtimeout: "180000"
      npm_config_network_timeout: "600000"
    commands:
      - cd frontend
      - npm ci
      - npm run build
      - tar -czf build.tgz build
      - npm prune --omit=dev
      - tar -czf node_modules.tgz node_modules
      - du -sh build node_modules || true

  - name: build-frontend
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    resources:
      requests: { cpu: 1, memory: 1Gi }
      limits:   { cpu: 2, memory: 4Gi }
    
    args:
      - --verbosity=debug
      - --context=dir://$DRONE_WORKSPACE/frontend
      - --dockerfile=$DRONE_WORKSPACE/frontend/Dockerfile
      - --destination=us-central1-docker.pkg.dev/spectra-kube/nexus/nexus-frontend:${DRONE_COMMIT_SHA}
      - --cache=true
      - --cache-ttl=168h
      - --snapshotMode=time
      - --use-new-run
    volumes:
      - name: docker-config
        path: /kaniko/.docker

  - name: deploy
    image: bitnami/kubectl:1.30
    environment: { PROJECT_ID: spectra-kube, REGION: us-central1, REPO: nexus }
    commands:
      - mkdir -p kustom-override/uat
      - |
        cat > kustom-override/uat/kustomization.yaml <<EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - ../../k8s/overlays/uat
        images:
          - name: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-backend
            newName: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-backend
            newTag: ${DRONE_COMMIT_SHA}
          - name: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-frontend
            newName: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-frontend
            newTag: ${DRONE_COMMIT_SHA}
        EOF
      - kubectl apply -k kustom-override/uat
      - kubectl -n uat rollout status deploy/backend --timeout=300s
      - kubectl -n uat rollout status deploy/frontend --timeout=300s

---
kind: pipeline
type: kubernetes
name: main
trigger: { branch: [main], event: [push] }
service_account_name: drone-pipeline

steps:
  - name: build-backend
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    
    args:
      - --verbosity=info
      - --context=dir://$DRONE_WORKSPACE/backend
      - --dockerfile=$DRONE_WORKSPACE/backend/Dockerfile
      - --destination=us-central1-docker.pkg.dev/spectra-kube/nexus/nexus-backend:${DRONE_COMMIT_SHA}
      - --cache=true
      - --cache-ttl=168h
      - --snapshotMode=time
      - --use-new-run
    volumes:
      - name: docker-config
        path: /kaniko/.docker

  - name: frontend-build
    image: node:20-bullseye
    environment:
      npm_config_fund: "false"
      npm_config_audit: "false"
      npm_config_progress: "false"
      npm_config_fetch_retries: "8"
      npm_config_fetch_retry_mintimeout: "30000"
      npm_config_fetch_retry_maxtimeout: "180000"
      npm_config_network_timeout: "600000"
    commands:
      - cd frontend
      - npm ci
      - npm run build
      - tar -czf build.tgz build
      - npm prune --omit=dev
      - tar -czf node_modules.tgz node_modules
      - du -sh build node_modules || true

  - name: build-frontend
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    resources:
      requests: { cpu: 1, memory: 1Gi }
      limits:   { cpu: 2, memory: 4Gi }
    
    args:
      - --verbosity=debug
      - --context=dir://$DRONE_WORKSPACE/frontend
      - --dockerfile=$DRONE_WORKSPACE/frontend/Dockerfile
      - --destination=us-central1-docker.pkg.dev/spectra-kube/nexus/nexus-frontend:${DRONE_COMMIT_SHA}
      - --cache=true
      - --cache-ttl=168h
      - --snapshotMode=time
      - --use-new-run
    volumes:
      - name: docker-config
        path: /kaniko/.docker

  - name: deploy
    image: bitnami/kubectl:1.30
    environment: { PROJECT_ID: spectra-kube, REGION: us-central1, REPO: nexus }
    commands:
      - mkdir -p kustom-override/main
      - |
        cat > kustom-override/main/kustomization.yaml <<EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - ../../k8s/overlays/main
        images:
          - name: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-backend
            newName: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-backend
            newTag: ${DRONE_COMMIT_SHA}
          - name: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-frontend
            newName: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/nexus-frontend
            newTag: ${DRONE_COMMIT_SHA}
        EOF
      - kubectl apply -k kustom-override/main
      - kubectl -n main rollout status deploy/backend --timeout=300s
      - kubectl -n main rollout status deploy/frontend --timeout=300s