name: CI - Backend SonarQube

on:
  pull_request:
    branches: [dev, uat, main]
  workflow_dispatch:

jobs:
  sonar-backend:
    name: SonarQube Analysis (backend)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    outputs:
      analyzed: ${{ steps.changes.outputs.backend }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'

      - name: Validate Gradle Wrapper
        if: steps.changes.outputs.backend == 'true'
        uses: gradle/wrapper-validation-action@v2

      - name: Make gradlew executable (safety)
        if: steps.changes.outputs.backend == 'true'
        run: chmod +x gradlew

      - name: Setup JDK 21
        if: steps.changes.outputs.backend == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Gradle cache
        if: steps.changes.outputs.backend == 'true'
        uses: gradle/actions/setup-gradle@v3

      - name: Test + Jacoco + Sonar (wait for Quality Gate)
        if: steps.changes.outputs.backend == 'true'
        run: |
          ./gradlew --no-daemon clean test jacocoTestReport sonar \
            -Dsonar.host.url="${SONAR_HOST_URL}" \
            -Dsonar.login="${SONAR_TOKEN}" \
            -Dsonar.qualitygate.wait=true \
            --info

      - name: No backend changes — skip analysis
        if: steps.changes.outputs.backend != 'true'
        run: echo "No backend changes; skipping analysis."

  notify:
    name: Email Result
    needs: sonar-backend
    runs-on: ubuntu-latest
    if: ${{ always() && github.event_name == 'pull_request' }}
    steps:
      - name: Compose outcome
        id: outcome
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          RESULT: ${{ needs.sonar-backend.result }}
        run: |
          if [ "$RESULT" = "success" ]; then
            STATE="success"; EMOJI="✅"
          else
            STATE="failure"; EMOJI="❌"
          fi
          STATE_UPPER=$(printf '%s' "$STATE" | tr '[:lower:]' '[:upper:]')
          {
            echo "STATE=$STATE"
            echo "STATE_UPPER=$STATE_UPPER"
            echo "EMOJI=$EMOJI"
            echo "PR_NUMBER=$PR_NUMBER"
            echo "SUBJECT=Test Merge #$PR_NUMBER pull request $STATE — Quality Gate"
          } >> "$GITHUB_OUTPUT"

      - name: Send email (Gmail SMTP)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: ${{ steps.outcome.outputs.SUBJECT }}
          to: ${{ secrets.ALERT_EMAIL_TO }}
          from: ${{ secrets.GMAIL_USERNAME }}
          html_body: |
            <p><strong>Test Merge #${{ steps.outcome.outputs.PR_NUMBER }} pull request ${{ steps.outcome.outputs.STATE }}</strong></p>
            <p>${{ steps.outcome.outputs.EMOJI }} <b>${{ steps.outcome.outputs.STATE_UPPER }}</b> — Quality Gate</p>
            <p><b>Repo:</b> ${{ github.repository }}<br/>
               <b>Branch:</b> ${{ github.head_ref || github.ref_name }}<br/>
               <b>Commit:</b> <code>${{ github.sha }}</code></p>
            <p><a href="https://github.com/${{ github.repository }}/pull/${{ steps.outcome.outputs.PR_NUMBER }}">Open Pull Request #${{ steps.outcome.outputs.PR_NUMBER }}</a></p>
            <p><a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a></p>
            <p><a href="${{ secrets.SONAR_HOST_URL }}/dashboard?id=spectra-systems_nexus-backend">Open Sonar Project</a></p>